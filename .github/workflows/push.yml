#
# GitHub action to build and deploy the develop branch on push.
#

name: Push

on:
  push:
    branches:
      - develop

jobs:
  push_build:
    name: Push
    strategy:
      fail-fast: false
    runs-on: windows-latest
    steps:
        
      - name: Clone Repository
        if:   ${{ steps.vars.outputs.GHA_REPO_ALIVE }} == 'true'
        uses: actions/checkout@v4
        with:
          submodules: recursive
        
      - name: Checkout Files
        uses: actions/checkout@v4
        with:
          repository: Vinifera-Developers/Vinifera-Files
          path: vinifera-files
        
      - name: Set Variables
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Install Dependencies
        run: |
          Invoke-WebRequest -Uri https://github.com/ninja-build/ninja/releases/download/v1.10.1/ninja-win.zip -OutFile $Env:TEMP\ninja-win.zip
          Expand-Archive $Env:TEMP\ninja-win.zip -DestinationPath $Env:TEMP\ninja
          echo "$Env:TEMP\ninja" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          
      - uses: ilammy/msvc-dev-cmd@v1.10.0
        with:
          arch: x86
          
      - name: Configure Project
        run: |
          cmake -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo -B build
      
      - name: Build Project
        run: |
          cmake --build build --config RelWithDebInfo
      
      - name: Copy Binaries
        shell: bash
        run: |
          mkdir artifact
          mkdir artifact/Movies
          ls -p | grep -v /
          cp ./build/Vinifera.dll ./artifact/Vinifera.dll
          cp ./build/Vinifera.pdb ./artifact/Vinifera.pdb
          cp ./build/LaunchVinifera.exe ./artifact/LaunchVinifera.exe
          cp ./TSpp/pdb/Game.pdb ./artifact/Game.pdb
          cp ./TSpp/edb/Game.edb ./artifact/Game.edb
          cp ./vinifera-files/files/VINIFERA.VQA ./artifact/Movies/VINIFERA.VQA

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: vinifera-push-${{ steps.vars.outputs.sha_short }}
          path: artifact

  push_build_ts_client:
    name: Push (TS-Client)
    strategy:
      fail-fast: false
    runs-on: windows-latest
    steps:
        
      - name: Clone Repository
        if:   ${{ steps.vars.outputs.GHA_REPO_ALIVE }} == 'true'
        uses: actions/checkout@v4
        with:
          submodules: recursive
        
      - name: Checkout Files
        uses: actions/checkout@v4
        with:
          repository: Vinifera-Developers/Vinifera-Files
          path: vinifera-files
        
      - name: Set Variables
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Install Dependencies
        run: |
          Invoke-WebRequest -Uri https://github.com/ninja-build/ninja/releases/download/v1.10.1/ninja-win.zip -OutFile $Env:TEMP\ninja-win.zip
          Expand-Archive $Env:TEMP\ninja-win.zip -DestinationPath $Env:TEMP\ninja
          echo "$Env:TEMP\ninja" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          
      - uses: ilammy/msvc-dev-cmd@v1.10.0
        with:
          arch: x86
          
      - name: Configure Project
        run: |
          cmake -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo -B build -DOPTION_TS_CLIENT_BUILD=ON
      
      - name: Build Project
        run: |
          cmake --build build --config RelWithDebInfo
      
      - name: Copy Binaries
        shell: bash
        run: |
          mkdir artifact
          mkdir artifact/Movies
          ls -p | grep -v /
          cp ./build/Vinifera.dll ./artifact/Vinifera.dll
          cp ./build/Vinifera.pdb ./artifact/Vinifera.pdb
          cp ./build/LaunchVinifera.exe ./artifact/LaunchVinifera.dat
          cp ./TSpp/pdb/Game.pdb ./artifact/Game.pdb
          cp ./TSpp/edb/Game.edb ./artifact/Game.edb
          cp ./vinifera-files/files/VINIFERA.VQA ./artifact/Movies/VINIFERA.VQA

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: vinifera-push-${{ steps.vars.outputs.sha_short }}-ts_client
          path: artifact
